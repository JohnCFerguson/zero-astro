---
import { PUBLIC_SEVER } from 'astro:env/client';
import { Z } from '../lib/Z.astro.ts';
import { Query } from '../lib/query.astro.ts';
import { defineAction } from 'astro:actions';
import { schema, type Schema } from '../zero-schema.js';
import type { Todo } from '../types/types.js';

const z = new Z<Schema>({
  server: `${PUBLIC_SEVER}`,
  schema,
  userID: 'anon'
});

// Get initial todos server-side
const todos = new Query(z.current.query.todo)

// Define actions
export const actions = {
  addTodo: defineAction({
    async handler({ request }) {
      const formData = await request.formData();
      const title = formData.get('title') as string;
      
      if (title) {
        await z.mutate.todo.insert({
          id: Math.random().toString(36).slice(2),
          title,
          completed: false
        });
      }
      return { success: true };
    }
  }),

  toggleTodo: defineAction({
    async handler({ request }) {
      const formData = await request.formData();
      const id = formData.get('id') as string;
      const completed = formData.get('completed') === 'true';
      
      await z.mutate.todo.update({
        id,
        completed
      });
      return { success: true };
    }
  })
};
---

<div>
  <h2>Todo List</h2>
  
  <form method="POST" action={actions.addTodo}>
    <input type="text" name="title" required />
    <button type="submit">Add Todo</button>
  </form>

  <ul>
    {todos.map((todo as Todo) => (
      <li>
        <form method="POST" action={actions.toggleTodo} style="display: inline">
          <input type="hidden" name="id" value={todo.id} />
          <input 
            type="checkbox"
            name="completed"
            value="true"
            checked={todo.completed}
            onChange="this.form.submit()"
          />
          {todo.title}
        </form>
      </li>
    ))}
  </ul>
</div>

<script>
// Client-side updates
const source = new EventSource('/api/todos/stream');
source.onmessage = (event) => {
  // Handle real-time updates
  const todos = JSON.parse(event.data);
  // Update UI
};
</script>
