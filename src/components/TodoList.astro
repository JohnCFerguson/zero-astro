---
import type { Todo } from "../types/types";

const todos = (await zero.query((tx) => tx.scan('todos').toArray())) as Todo[];
---

<form id="todo-form"></form>
<input type="text" name="title" required />
<button type="submit">Add Todo</button>

<ul>
	{
		todos.map((todo) => (
			<li class:list={['todo', { completed: todo.completed }]} data-id={todo.id}>
				<input type="checkbox" checked={todo.completed} class="toggle" />
				<span>{todo.title}</span>
				<button class="delete">Ã—</button>
			</li>
		))
	}
</ul>

<script>
	const form = document.querySelector('#todo-form');
	const zero = window.zeroClient;

	form?.addEventListener('submit', async (e) => {
		e.preventDefault();
		const formData = new FormData(form as HTMLFormElement);
		const title = formData.get('title') as string;
		await zero.mutate.createTodo(title);
		(form as HTMLFormElement).reset();
	});

	document.querySelectorAll('.toggle').forEach((toggle) => {
		toggle.addEventListener('change', async (e) => {
			const id = (e.target as HTMLElement).closest('li')?.dataset.id;
			if (id) await zero.mutate.toggleTodo(id);
		});
	});

	document.querySelectorAll('.delete').forEach((button) => {
		button.addEventListener('click', async (e) => {
			const id = (e.target as HTMLElement).closest('li')?.dataset.id;
			if (id) await zero.mutate.deleteTodo(id);
		});
	});
</script>
